{"ts":1380447607139,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * ZfcUser Configuration\n *\n * If you have a ./config/autoload/ directory set up for your project, you can\n * drop this config file in it and change the values as you wish.\n */\n$settings = array(\n    /**\n     * Zend\\Db\\Adapter\\Adapter DI Alias\n     *\n     * Please specify the DI alias for the configured Zend\\Db\\Adapter\\Adapter\n     * instance that ZfcUser should use.\n     */\n    //'zend_db_adapter' => 'Zend\\Db\\Adapter\\Adapter',\n\n    /**\n     * User Model Entity Class\n     *\n     * Name of Entity class to use. Useful for using your own entity class\n     * instead of the default one provided. Default is ZfcUser\\Entity\\User.\n     * The entity class should implement ZfcUser\\Entity\\UserInterface\n     */\n    //'user_entity_class' => 'ZfcUser\\Entity\\User',\n\n    /**\n     * Enable registration\n     *\n     * Allows users to register through the website.\n     *\n     * Accepted values: boolean true or false\n     */\n    //'enable_registration' => true,\n\n    /**\n     * Enable Username\n     *\n     * Enables username field on the registration form, and allows users to log\n     * in using their username OR email address. Default is false.\n     *\n     * Accepted values: boolean true or false\n     */\n    //'enable_username' => false,\n\n    /**     \n     * Authentication Adapters\n     *\n     * Specify the adapters that will be used to try and authenticate the user\n     *\n     * Default value: array containing 'ZfcUser\\Authentication\\Adapter\\Db' with priority 100\n     * Accepted values: array containing services that implement 'ZfcUser\\Authentication\\Adapter\\ChainableAdapter'\n     */\n    'auth_adapters' => array( 100 => 'ZfcUser\\Authentication\\Adapter\\Db' ),\n\n    /**\n     * Enable Display Name\n     *\n     * Enables a display name field on the registration form, which is persisted\n     * in the database. Default value is false.\n     *\n     * Accepted values: boolean true or false\n     */\n    //'enable_display_name' => true,\n\n    /**\n     * Modes for authentication identity match\n     *\n     * Specify the allowable identity modes, in the order they should be\n     * checked by the Authentication plugin.\n     *\n     * Default value: array containing 'email'\n     * Accepted values: array containing one or more of: email, username\n     */\n    //'auth_identity_fields' => array( 'email' ),\n\n    /**\n     * Login form timeout\n     *\n     * Specify the timeout for the CSRF security field of the login form\n     * in seconds. Default value is 300 seconds.\n     *\n     * Accepted values: positive int value\n     */\n    //'login_form_timeout' => 300,\n\n    /**\n     * Registration form timeout\n     *\n     * Specify the timeout for the CSRF security field of the registration form\n     * in seconds. Default value is 300 seconds.\n     *\n     * Accepted values: positive int value\n     */\n    //'user_form_timeout' => 300,\n\n    /**\n     * Login After Registration\n     *\n     * Automatically logs the user in after they successfully register. Default\n     * value is false.\n     *\n     * Accepted values: boolean true or false\n     */\n    //'login_after_registration' => true,\n\n    /**\n     * Registration Form Captcha\n     *\n     * Determines if a captcha should be utilized on the user registration form.\n     * Default value is false.\n     */\n    //'use_registration_form_captcha' => false,\n\n    /**\n     * Form Captcha Options\n     *\n     * Currently used for the registration form, but re-usable anywhere. Use\n     * this to configure which Zend\\Captcha adapter to use, and the options to\n     * pass to it. The default uses the Figlet captcha.\n     */\n    /*'form_captcha_options' => array(\n        'class'   => 'figlet',\n        'options' => array(\n            'wordLen'    => 5,\n            'expiration' => 300,\n            'timeout'    => 300,\n        ),\n    ),*/\n\n    /**\n     * Use Redirect Parameter If Present\n     *\n     * Upon successful authentication, check for a 'redirect' POST or GET parameter\n     *\n     * Accepted values: boolean true or false\n     */\n    //'use_redirect_parameter_if_present' => true,\n\n    /**\n\t * Sets the view template for the user login widget\n\t *\n\t * Default value: 'zfc-user/user/login.phtml'\n     * Accepted values: string path to a view script\n\t */\n    //'user_login_widget_view_template' => 'zfc-user/user/login.phtml',\n\n    /**\n     * Login Redirect Route\n     *\n     * Upon successful login the user will be redirected to the entered route\n     *\n     * Default value: 'zfcuser'\n     * Accepted values: A valid route name within your application\n     *\n     */\n    //'login_redirect_route' => 'zfcuser',\n\n    /**\n     * Logout Redirect Route\n     *\n     * Upon logging out the user will be redirected to the enterd route\n     *\n     * Default value: 'zfcuser/login'\n     * Accepted values: A valid route name within your application\n     */\n    //'logout_redirect_route' => 'zfcuser/login',\n\n    /**\n     * Password Security\n     *\n     * DO NOT CHANGE THE PASSWORD HASH SETTINGS FROM THEIR DEFAULTS\n     * Unless A) you have done sufficient research and fully understand exactly\n     * what you are changing, AND B) you have a very specific reason to deviate\n     * from the default settings and know what you're doing.\n     *\n     * The password hash settings may be changed at any time without\n     * invalidating existing user accounts. Existing user passwords will be\n     * re-hashed automatically on their next successful login.\n     */\n\n    /**\n     * Password Cost\n     *\n     * The number represents the base-2 logarithm of the iteration count used for\n     * hashing. Default is 14 (about 10 hashes per second on an i5).\n     *\n     * Accepted values: integer between 4 and 31\n     */\n    //'password_cost' => 14,\n\n    /**\n     * Enable user state usage\n     * \n     * Should user's state be used in the registration/login process?\n     */\n    //'enable_user_state' => true,\n    \n    /**\n     * Default user state upon registration\n     * \n     * What state user should have upon registration?\n     * Allowed value type: integer\n     */\n    //'default_user_state' => 1,\n    \n    /**\n     * States which are allowing user to login\n     * \n     * When user tries to login, is his/her state one of the following?\n     * Include null if you want user's with no state to login as well.\n     * Allowed value types: null and integer\n     */\n    //'allowed_login_states' => array( null, 1 ),\n    \n    /**\n     * User table name\n     */\n    //'table_name' => 'user',\n    \n    /**\n     * End of ZfcUser configuration\n     */\n);\n\n/**\n * You do not need to edit below this line\n */\nreturn array(\n    'zfcuser' => $settings,\n    'service_manager' => array(\n        'aliases' => array(\n            'zfcuser_zend_db_adapter' => (isset($settings['zend_db_adapter'])) ? $settings['zend_db_adapter']: 'Zend\\Db\\Adapter\\Adapter',\n        ),\n    ),\n);\n"]],"start1":0,"start2":0,"length1":0,"length2":6808}]],"length":6808}
{"contributors":[],"silentsave":false,"ts":1380447711592,"patch":[[{"diffs":[[0,"lse\n     */\n    "],[-1,"//"],[0,"'enable_display_"]],"start1":1896,"start2":1896,"length1":34,"length2":32}]],"length":6806,"saved":false}
